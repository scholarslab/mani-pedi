# require 'jekyll'

module TwineChomp
  class Generator < Jekyll::Generator
    def generate(site)
      # open file generated by twine
      file_in = File.open("pages/mani-pedi-story.html", "r")
      # read lines of file and remove newline characters
      story_in = file_in.readlines.map(&:chomp)
      # close file
      file_in.close
      
      # locate css & body of twine story
      # css is all on one line, we chop off html header script tag
      css = story_in[6][25..]
      # story content is reliably (so far) in one place
      twine_story = story_in[10..-4]
      
      # write css to its file
      File.write("assets/story.css", css)
      
      # and write story content to its file with list comprehension
      File.open("pages/story-out.html", 'w'){ |f|
      f.puts(twine_story)
      }
    end
  end
end